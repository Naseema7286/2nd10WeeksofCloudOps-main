pipeline {
    agent any 
    tools {
        jdk 'jdk'
        nodejs 'nodejs'
    }
    environment  {
        SCANNER_HOME=tool 'sonar-scanner'
        AWS_ACCOUNT_ID = credentials('account_id')
        AWS_ECR_REPO_NAME = credentials('Ecr_repo1')
        AWS_DEFAULT_REGION = 'us-east-1'
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/"
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/Naseema7286/2nd10WeeksofCloudOps-main.git'
            }
        }
        stage('Sonarqube Analysis') {
            steps {
                dir('client') {
                    withSonarQubeEnv('soanar-server') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=project3tier \
                        -Dsonar.projectKey=project3tier '''
                    }
                }
            }
        }
     
        stage('Trivy File Scan') {
            steps {
                dir('client') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }
        stage("Docker Image Build") {
            steps {
                script {
                    dir('client') {
                            sh 'docker system prune -f'
                            sh 'docker container prune -f'
                            sh 'docker build -t ${AWS_ECR_REPO_NAME} .'
                    }
                }
            }
        }
        stage("ECR Image Pushing") {
            steps {
                script {
                        sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 913524910759.dkr.ecr.us-east-1.amazonaws.com'
                        sh 'docker tag frontend:latest 913524910759.dkr.ecr.us-east-1.amazonaws.com/frontend:latest'
                        sh 'docker push 913524910759.dkr.ecr.us-east-1.amazonaws.com/frontend:latest'
                }
            }
        }
        
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/Naseema7286/2nd10WeeksofCloudOps-main.git'
            }
        }
        stage('Update Deployment file') {
            environment {
                GIT_REPO_NAME = "2nd10WeeksofCloudOps-main"
                GIT_USER_NAME = "Naseema7286"
            }
            steps {
                dir('kubernetes-files') {
                    withCredentials([string(credentialsId: 'git-token', variable: 'git-token')]) {
                        sh '''
                            git config user.email "naseemasayyad7280@gmail.com"
                            git config user.name "Naseema"
                            BUILD_NUMBER=${BUILD_NUMBER}
                            echo $BUILD_NUMBER
                            sed -i "s#image:.*#image: $REPOSITORY_URI$AWS_ECR_REPO_NAME:$BUILD_NUMBER#g" frontend-deploy-service.yaml
                            git add .
                            git commit -m "Update deployment Image to version \${BUILD_NUMBER}"
                            git push https://${git-token}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
        
                        '''
                    }
                }
            }
        }
    }
}
